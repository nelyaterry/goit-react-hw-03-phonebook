{"version":3,"sources":["Components/App/App.styled.jsx","Components/Button/Button.styled.jsx","Components/Button/Button.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/Contacts/Contacts.styled.jsx","Components/Contacts/Contacts.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/App/App.js","index.js"],"names":["Title","styled","h1","SubTitle","h2","Phonebook","div","ContactBox","Button","button","ButtonText","children","onClick","Form","form","Label","label","InputName","span","Input","input","ContactForm","state","name","number","handelChange","e","currentTarget","value","setState","id","uuidv4","handelSubmit","preventDefault","props","onSubmit","reset","this","type","pattern","title","required","onChange","Component","propTypes","PropTypes","func","ContacstList","ul","Contact","li","ContactName","ContactPhone","MessageNotFound","p","Contacts","contacts","handleDeleteContact","length","map","h3","Filter","changeFilter","App","filter","formSubmitHandler","data","some","contact","alert","prevState","target","getFilteredContacts","filterNormalized","toLowerCase","includes","localStorData","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cd8b9631.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 64px;\r\n  margin: 24px 24px;\r\n  color: rgb(93 203 152);\r\n`;\r\nexport const SubTitle = styled.h2`\r\n  color: rgb(75, 75, 75);\r\n  margin: 0;\r\n`;\r\nexport const Phonebook = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const ContactBox = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 24px;\r\n  background-color: rgba(165, 230, 250, 0.3);\r\n  width: 65%;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  height: 50px;\r\n  padding: 12px 24px;\r\n  font-size: 18px;\r\n  color: white;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgb(93 203 152);\r\n  outline: none;\r\n  cursor: pointer;\r\n  border: none;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Button } from \"./Button.styled\";\r\n\r\nconst ButtonText = ({ children, onClick }) => {\r\n  return <Button onClick={onClick}>{children}</Button>;\r\n};\r\n\r\nButtonText.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ButtonText;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 35%;\r\n  padding: 24px 32px;\r\n  background-color: rgba(67, 67, 67, 0.3);\r\n\r\n  & > button {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nexport const InputName = styled.span`\r\n  margin-bottom: 16px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  height: 40px;\r\n  padding: 8px 24px;\r\n  font-size: 18px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgba(228, 228, 228, 0.5);\r\n  outline: none;\r\n  border: none;\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ButtonText from \"../Button/Button\";\r\nimport { Form, Label, InputName, Input } from \"./ContactForm.styled\";\r\n\r\nexport default class ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handelChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      id: uuidv4(),\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handelSubmit}>\r\n        <Label>\r\n          <InputName>Name</InputName>\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handelChange}\r\n          />\r\n        </Label>\r\n\r\n        <Label>\r\n          <InputName>Number</InputName>\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handelChange}\r\n          />\r\n        </Label>\r\n\r\n        <ButtonText type=\"submit\">Add Contact</ButtonText>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContacstList = styled.ul`\r\n  list-style-type: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 600px;\r\n`;\r\n\r\nexport const Contact = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 8px 12px;\r\n  margin-bottom: 12px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  background-color: rgb(93 203 152 / 20%);\r\n`;\r\n\r\nexport const ContactName = styled.span`\r\n  width: 40%;\r\n  margin-right: 12px;\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const ContactPhone = styled.span`\r\n  margin-right: 12px;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  color: rgb(75 75 75);\r\n`;\r\n\r\nexport const MessageNotFound = styled.p`\r\n  font-weight: 600;\r\n  font-size: 24px;\r\n  color: rgb(75 75 75);\r\n`;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport ButtonText from \"../Button/Button\";\r\nimport {\r\n  ContacstList,\r\n  Contact,\r\n  ContactName,\r\n  ContactPhone,\r\n  MessageNotFound,\r\n} from \"./Contacts.styled\";\r\n\r\nconst Contacts = ({ contacts, handleDeleteContact }) => {\r\n  return (\r\n    // <p>helloWorld {contacts[0]}</p>\r\n    contacts.length > 0 ? (\r\n      <ContacstList>\r\n        {contacts.map(({ name, number, id }) => (\r\n          <Contact key={id}>\r\n            <ContactName>{name}</ContactName>\r\n            <ContactPhone>{number}</ContactPhone>\r\n            <ButtonText type=\"button\" onClick={() => handleDeleteContact(id)}>\r\n              Delete\r\n            </ButtonText>\r\n          </Contact>\r\n        ))}\r\n      </ContacstList>\r\n    ) : (\r\n      <MessageNotFound>Contact not found</MessageNotFound>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array,\r\n  handleDeleteContact: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Title = styled.h3`\r\n  color: rgb(93 203 152);\r\n  font-weight: 600;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 400px;\r\n  /* height: 40px; */\r\n  padding: 8px 24px;\r\n  margin-bottom: 24px;\r\n  font-size: 18px;\r\n  box-shadow: rgb(0 0 0 / 15%) 2px 2px 3px;\r\n  /* background-color: rgba(228, 228, 228, 0.5); */\r\n  outline: none;\r\n  border: none;\r\n`;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { Title, Input } from \"./Filter.styled\";\r\nconst Filter = ({ value, changeFilter }) => {\r\n  return (\r\n    <>\r\n      <Title>Find contact by name</Title>\r\n      <Input type=\"text\" name=\"filter\" value={value} onChange={changeFilter} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  changeFilter: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\n\nimport { Phonebook, Title, SubTitle, ContactBox } from \"./App.styled\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Contacts from \"../Contacts/Contacts\";\nimport Filter from \"../Filter/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const localStorData = JSON.parse(localStorage.getItem(\"contacts\"));\n\n    if (localStorData) {\n      this.setState({\n        contacts: localStorData,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  formSubmitHandler = (data) => {\n    !this.state.contacts.some((contact) => contact.name === data.name)\n      ? this.setState((prevState) => ({\n          contacts: [...prevState.contacts, data],\n        }))\n      : alert(` ${data.name} is alredy in the contacts list`);\n  };\n\n  handleDeleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  changeFilter = (e) => {\n    // console.log(e);\n    this.setState({ filter: e.target.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const filterNormalized = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filterNormalized)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <>\n        <Title>Phonebook</Title>\n        <Phonebook>\n          <ContactForm onSubmit={this.formSubmitHandler} />\n          <ContactBox>\n            <SubTitle>Contacts</SubTitle>\n            <Filter value={filter} changeFilter={this.changeFilter} />\n            <Contacts\n              contacts={this.getFilteredContacts()}\n              handleDeleteContact={this.handleDeleteContact}\n            />\n          </ContactBox>\n        </Phonebook>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}